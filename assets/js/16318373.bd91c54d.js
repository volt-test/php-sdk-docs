"use strict";(self.webpackChunkphp_sdk_docs=self.webpackChunkphp_sdk_docs||[]).push([[5995],{7972:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"Steps","title":"Steps","description":"Steps define individual HTTP requests and their associated configurations within a scenario.","source":"@site/docs/Step.md","sourceDirName":".","slug":"/Steps","permalink":"/docs/Steps","draft":false,"unlisted":false,"editUrl":"https://github.com/volt-test/php-sdk-docs/tree/main/packages/create-docusaurus/templates/shared/docs/Step.md","tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"id":"Steps","title":"Steps","sidebar_label":"Steps (HTTP Requests)","sidebar_position":7},"sidebar":"tutorialSidebar","previous":{"title":"Scenarios","permalink":"/docs/Scenarios"},"next":{"title":"Results","permalink":"/docs/Result"}}');var a=n(4848),i=n(8453);const r={id:"Steps",title:"Steps",sidebar_label:"Steps (HTTP Requests)",sidebar_position:7},o="Steps",l={},d=[{value:"Creating Steps",id:"creating-steps",level:2},{value:"HTTP Methods",id:"http-methods",level:2},{value:"GET Request",id:"get-request",level:3},{value:"POST Request",id:"post-request",level:3},{value:"PUT Request",id:"put-request",level:3},{value:"PATCH Request",id:"patch-request",level:3},{value:"DELETE Request",id:"delete-request",level:3},{value:"HEAD Request",id:"head-request",level:3},{value:"OPTIONS Request",id:"options-request",level:3},{value:"Headers",id:"headers",level:2},{value:"Data Extraction",id:"data-extraction",level:2},{value:"JSON Response",id:"json-response",level:3},{value:"Headers",id:"headers-1",level:3},{value:"Cookies",id:"cookies",level:3},{value:"Regular Expressions",id:"regular-expressions",level:3},{value:"Response Validation",id:"response-validation",level:2},{value:"Validate Status",id:"validate-status",level:3},{value:"Think Time",id:"think-time",level:2},{value:"Using Variables",id:"using-variables",level:2},{value:"Complete Example",id:"complete-example",level:2},{value:"Validation Rules",id:"validation-rules",level:2}];function c(e){const s={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.header,{children:(0,a.jsx)(s.h1,{id:"steps",children:"Steps"})}),"\n",(0,a.jsx)(s.p,{children:"Steps define individual HTTP requests and their associated configurations within a scenario."}),"\n",(0,a.jsx)(s.p,{children:"Scenario can contain multiple steps, each representing a unique request to be executed during the test."}),"\n",(0,a.jsx)(s.h2,{id:"creating-steps",children:"Creating Steps"}),"\n",(0,a.jsx)(s.p,{children:"Creating step from a scenario instance:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-php",children:"use VoltTest\\VoltTest;\n$test = new VoltTest('API Test');\n$scenario = $test->scenario('Login Flow');\n$scenario->step('Login')    // Step name is required\n    ->post('https://api.example.com/login');\n"})}),"\n",(0,a.jsx)(s.h2,{id:"http-methods",children:"HTTP Methods"}),"\n",(0,a.jsx)(s.h3,{id:"get-request",children:"GET Request"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-php",children:"$scenario->get('https://api.example.com/users')\n    ->header('Accept', 'application/json');\n"})}),"\n",(0,a.jsx)(s.h3,{id:"post-request",children:"POST Request"}),"\n",(0,a.jsx)(s.p,{children:"Json body is required for POST requests:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-php",children:"$scenario->post('https://api.example.com/users', '{\"name\": \"John\"}')\n    ->header('Content-Type', 'application/json');\n"})}),"\n",(0,a.jsx)(s.p,{children:"Html form data can be sent as an array:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-php",children:"$scenario->post('https://api.example.com/users', 'email=${email}&password=${password}')\n    ->header('Content-Type', 'application/x-www-form-urlencoded');\n"})}),"\n",(0,a.jsx)(s.h3,{id:"put-request",children:"PUT Request"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-php",children:"$scenario->put('https://api.example.com/users/1', '{\"name\": \"Updated\"}');\n"})}),"\n",(0,a.jsx)(s.h3,{id:"patch-request",children:"PATCH Request"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-php",children:"$scenario->patch('https://api.example.com/users/1', '{\"status\": \"active\"}');\n"})}),"\n",(0,a.jsx)(s.h3,{id:"delete-request",children:"DELETE Request"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-php",children:"$scenario->delete('https://api.example.com/users/1');\n"})}),"\n",(0,a.jsx)(s.h3,{id:"head-request",children:"HEAD Request"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-php",children:"$scenario->head('https://api.example.com/status');\n"})}),"\n",(0,a.jsx)(s.h3,{id:"options-request",children:"OPTIONS Request"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-php",children:"$scenario->options('https://api.example.com/users');\n"})}),"\n",(0,a.jsx)(s.h2,{id:"headers",children:"Headers"}),"\n",(0,a.jsx)(s.p,{children:"Add custom headers to requests:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-php",children:"$scenario->post('https://api.example.com/users', '{\"name\": \"John\"}')\n     ->header('Authorization', 'Bearer token')\n     ->header('Accept', 'application/json')\n     ->header('X-Custom-Header', 'value');\n"})}),"\n",(0,a.jsx)(s.h2,{id:"data-extraction",children:"Data Extraction"}),"\n",(0,a.jsx)(s.p,{children:"Data can be extracted from responses and used in subsequent requests."}),"\n",(0,a.jsx)(s.p,{children:"Let's say you have a login request that returns a token in the response. You can extract the token and use it in subsequent requests."}),"\n",(0,a.jsx)(s.h3,{id:"json-response",children:"JSON Response"}),"\n",(0,a.jsx)(s.p,{children:"Extract data from a JSON response:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-php",children:"$scenario->post('https://api.example.com/login', '{\"name\": \"John\"}')\n->header('Content-Type', 'application/json')\n->extractFromJson('token', 'meta.token');\n"})}),"\n",(0,a.jsxs)(s.p,{children:["Here, ",(0,a.jsx)(s.code,{children:"token"})," is the variable name, and ",(0,a.jsx)(s.code,{children:"meta.token"})," is the JSON path to extract the value from the response.\nSo, the extracted value will be stored in the ",(0,a.jsx)(s.code,{children:"token"})," variable and can be used in subsequent steps.\nExample usage in subsequent steps:"]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-php",children:"$scenario->post('https://api.example.com/users', '{\"name\": \"John\"}')\n    ->header('Content-Type', 'application/json')\n    ->header('Authorization', 'Bearer ${token}');\n"})}),"\n",(0,a.jsx)(s.admonition,{type:"info",children:(0,a.jsxs)(s.p,{children:["The extracted value can be used in subsequent steps by referencing the variable name with ",(0,a.jsx)(s.code,{children:"${variableName}"}),"."]})}),"\n",(0,a.jsx)(s.h3,{id:"headers-1",children:"Headers"}),"\n",(0,a.jsx)(s.p,{children:"Extract data from response headers:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-php",children:"$scenario->post('https://api.example.com/login', '{\"name\": \"John\"}')\n    ->header('Content-Type', 'application/json')\n    ->extractFromHeaders('token','Authorization'); // token is the variable name and Authorization is the header name\n"})}),"\n",(0,a.jsxs)(s.p,{children:["Here, ",(0,a.jsx)(s.code,{children:"token"})," is the variable name, and ",(0,a.jsx)(s.code,{children:"Authorization"})," is the header name to extract the value from the response headers.\nSo, the extracted value will be stored in the ",(0,a.jsx)(s.code,{children:"token"})," variable and can be used in subsequent steps."]}),"\n",(0,a.jsx)(s.h3,{id:"cookies",children:"Cookies"}),"\n",(0,a.jsx)(s.p,{children:"Extract data from cookies:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-php",children:"$loginScenario->step('submit_login')\n    ->post(\n        'https://example.com/login',\n        '_token=${csrf_token}&email=tes11t1v@mai1l.com&password=12345678'\n    )\n    ->extractFromCookie('session', 'laravel_session')\n    ->extractFromCookie('XSRF-TOKEN', 'XSRF-TOKEN')\n    ->header('Content-Type', 'application/x-www-form-urlencoded');\n"})}),"\n",(0,a.jsx)(s.h3,{id:"regular-expressions",children:"Regular Expressions"}),"\n",(0,a.jsx)(s.p,{children:"Extract data using regular expressions:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-php",children:"$scenario->get('https://example.com/login')\n    ->extractFromRegex('csrf', 'name=\"_token\" value=\"(.+?)\"');\n"})}),"\n",(0,a.jsxs)(s.p,{children:["Here, ",(0,a.jsx)(s.code,{children:"csrf"})," is the variable name, and ",(0,a.jsx)(s.code,{children:'name="_token" value="(.+?)"'})," is the regular expression to extract the value from the response."]}),"\n",(0,a.jsx)(s.h2,{id:"response-validation",children:"Response Validation"}),"\n",(0,a.jsx)(s.p,{children:"For now, VoltTest php sdk supports validating the response status code only."}),"\n",(0,a.jsx)(s.h3,{id:"validate-status",children:"Validate Status"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-php",children:"$scenario->post('https://api.example.com/login', '{\"name\": \"John\"}')\n    ->validateStatus('success', 200);\n"})}),"\n",(0,a.jsxs)(s.p,{children:["Here, ",(0,a.jsx)(s.code,{children:"success"})," is the validation name, and ",(0,a.jsx)(s.code,{children:"200"})," is the expected status code.\nSo if the response status code is not 200, This will add an error to the test report."]}),"\n",(0,a.jsx)(s.h2,{id:"think-time",children:"Think Time"}),"\n",(0,a.jsx)(s.p,{children:"Think time is the delay between steps in a scenario.\nThe default think time is 0 seconds."}),"\n",(0,a.jsx)(s.p,{children:"Adding a delay after step execution:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-php",children:"$scenario->setThinkTime('2s');  // 2-second delay\n$scenario->setThinkTime('1m');  // 1-minute delay\n"})}),"\n",(0,a.jsx)(s.p,{children:"This configuration adds a delay of (2 seconds or 1 minute) after the step execution."}),"\n",(0,a.jsx)(s.h2,{id:"using-variables",children:"Using Variables"}),"\n",(0,a.jsx)(s.p,{children:"Reference extracted variables in subsequent steps:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-php",children:"// Extract token from login response\n$scenario->post('/login', '{\"username\": \"user\", \"password\": \"pass\"}')\n    ->extractFromJson('token', 'data.token');\n\n// Use token in next request\n$scenario->get('/profile')\n    ->header('Authorization', 'Bearer ${token}');\n"})}),"\n",(0,a.jsx)(s.h2,{id:"complete-example",children:"Complete Example"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-php",children:"$scenario->step('Get Form')\n    ->get('https://example.com/form')\n    ->header('Content-Type', 'application/x-www-form-urlencoded')\n    ->extractFromRegex('csrf', 'name=\"_token\" value=\"(.+?)\"')\n    ->validateStatus('success', 200)\n    ->setThinkTime('1s');\n    \n$scenario->step('Process Result')\n    ->post('https://example.com/form', 'name=John')\n    ->header('X-CSRF-TOKEN', '${csrf}')\n    ->validateStatus('success', 200);\n"})}),"\n",(0,a.jsx)(s.p,{children:"This example demonstrates a scenario with two steps:"}),"\n",(0,a.jsxs)(s.ol,{children:["\n",(0,a.jsxs)(s.li,{children:["Get Form: Sends a GET request to ",(0,a.jsx)(s.code,{children:"https://example.com/form"}),", extracts the CSRF token from the response, and validates the status code."]}),"\n",(0,a.jsxs)(s.li,{children:["After a 1-second delay, the Process Result step sends a POST request to ",(0,a.jsx)(s.code,{children:"https://example.com/form"})," with the CSRF token extracted from the previous step."]}),"\n"]}),"\n",(0,a.jsx)(s.h2,{id:"validation-rules",children:"Validation Rules"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsx)(s.li,{children:"Step name is required"}),"\n",(0,a.jsx)(s.li,{children:"URLs must be valid HTTP/HTTPS URLs"}),"\n",(0,a.jsx)(s.li,{children:"Headers must follow RFC 7230 requirements"}),"\n",(0,a.jsx)(s.li,{children:"JSON paths must be valid expressions"}),"\n",(0,a.jsx)(s.li,{children:"Regex patterns must be valid"}),"\n",(0,a.jsx)(s.li,{children:"Think time must use valid time units (s/m/h)"}),"\n"]})]})}function p(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>r,x:()=>o});var t=n(6540);const a={},i=t.createContext(a);function r(e){const s=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),t.createElement(i.Provider,{value:s},e.children)}}}]);