"use strict";(self.webpackChunkphp_sdk_docs=self.webpackChunkphp_sdk_docs||[]).push([[5806],{6954:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>d,contentTitle:()=>c,default:()=>o,frontMatter:()=>l,metadata:()=>n,toc:()=>a});const n=JSON.parse('{"id":"Result","title":"Result","description":"VoltTest provides comprehensive performance metrics and statistics through the TestResult class.","source":"@site/docs/Result.md","sourceDirName":".","slug":"/Result","permalink":"/docs/Result","draft":false,"unlisted":false,"editUrl":"https://github.com/volt-test/php-sdk-docs/tree/main/docs/Result.md","tags":[],"version":"current","sidebarPosition":8,"frontMatter":{"id":"Result","title":"Result","sidebar_label":"Results","sidebar_position":8},"sidebar":"tutorialSidebar","previous":{"title":"Steps (HTTP Requests)","permalink":"/docs/Steps"},"next":{"title":"Examples","permalink":"/docs/category/examples"}}');var r=t(4848),i=t(8453);const l={id:"Result",title:"Result",sidebar_label:"Results",sidebar_position:8},c="Test Results",d={},a=[{value:"Basic Usage",id:"basic-usage",level:2},{value:"Available Metrics",id:"available-metrics",level:2},{value:"Basic Metrics",id:"basic-metrics",level:3},{value:"Response Time Statistics",id:"response-time-statistics",level:3},{value:"Raw Data Access",id:"raw-data-access",level:3},{value:"Metrics Format",id:"metrics-format",level:2},{value:"Response Time Units",id:"response-time-units",level:2},{value:"Complete Example",id:"complete-example",level:2},{value:"Metrics Reference Table",id:"metrics-reference-table",level:2}];function u(e){const s={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"test-results",children:"Test Results"})}),"\n",(0,r.jsx)(s.p,{children:"VoltTest provides comprehensive performance metrics and statistics through the TestResult class."}),"\n",(0,r.jsx)(s.h2,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-php",children:'$result = $test->run();\n\n// Get key metrics\necho "Success Rate: " . $result->getSuccessRate() . "%\\n";\necho "Total Requests: " . $result->getTotalRequests() . "\\n";\n'})}),"\n",(0,r.jsx)(s.h2,{id:"available-metrics",children:"Available Metrics"}),"\n",(0,r.jsx)(s.h3,{id:"basic-metrics",children:"Basic Metrics"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-php",children:'// Test duration\n$result->getDuration();           // Returns: "24.000873057s"\n\n// Request counts\n$result->getTotalRequests();      // Returns: 5000\n$result->getSuccessRequests();    // Returns: 4148\n$result->getFailedRequests();     // Returns: 852\n\n// Performance metrics\n$result->getSuccessRate();        // Returns: 82.96\n$result->getRequestsPerSecond();  // Returns: 208.33\n'})}),"\n",(0,r.jsx)(s.h3,{id:"response-time-statistics",children:"Response Time Statistics"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-php",children:'// Time measurements\n$result->getMinResponseTime();      // Returns: "7.388011ms"\n$result->getMaxResponseTime();      // Returns: "18.179649581s"\n$result->getAvgResponseTime();      // Returns: "3.848391356s"\n$result->getMedianResponseTime();   // Returns: "8.997304894s"\n$result->getP95ResponseTime();      // Returns: "16.74641748s"\n$result->getP99ResponseTime();      // Returns: "17.552319263s"\n'})}),"\n",(0,r.jsx)(s.h3,{id:"raw-data-access",children:"Raw Data Access"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-php",children:"// Get all metrics as array\n$metrics = $result->getAllMetrics();\n\n// Access raw output\n$rawOutput = $result->getRawOutput();\n"})}),"\n",(0,r.jsx)(s.h2,{id:"metrics-format",children:"Metrics Format"}),"\n",(0,r.jsx)(s.p,{children:"The TestResult class parses and formats the following output structure:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-plaintext",children:"Test Metrics Summary:\n===================\nDuration:     24.000873057s\nTotal Reqs:   5000\nSuccess Rate: 82.96%\nReq/sec:      208.33\nSuccess Requests: 4148\nFailed Requests: 852\n\nResponse Time:\n------------\nMin:    7.388011ms\nMax:    18.179649581s\nAvg:    3.848391356s\nMedian: 8.997304894s\nP95:    16.74641748s\nP99:    17.552319263s\n"})}),"\n",(0,r.jsx)(s.h2,{id:"response-time-units",children:"Response Time Units"}),"\n",(0,r.jsx)(s.p,{children:"Results are provided in appropriate units:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"Milliseconds (ms)"}),"\n",(0,r.jsx)(s.li,{children:"Seconds (s)"}),"\n",(0,r.jsx)(s.li,{children:"Minutes (m)"}),"\n",(0,r.jsx)(s.li,{children:"Hours (h)"}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"complete-example",children:"Complete Example"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-php",children:'$result = $test->run();\n\nprintf("Test Summary:\\n");\nprintf("Duration: %s\\n", $result->getDuration());\nprintf("Total Requests: %d\\n", $result->getTotalRequests());\nprintf("Success Rate: %.2f%%\\n", $result->getSuccessRate());\nprintf("Requests/sec: %.2f\\n", $result->getRequestsPerSecond());\nprintf("Success Requests: %d\\n", $result->getSuccessRequests());\nprintf("Failed Requests: %d\\n", $result->getFailedRequests());\n\nprintf("\\nResponse Times:\\n");\nprintf("Min: %s\\n", $result->getMinResponseTime());\nprintf("Max: %s\\n", $result->getMaxResponseTime());\nprintf("Avg: %s\\n", $result->getAvgResponseTime());\nprintf("Median: %s\\n", $result->getMedianResponseTime());\nprintf("P95: %s\\n", $result->getP95ResponseTime());\nprintf("P99: %s\\n", $result->getP99ResponseTime());\n'})}),"\n",(0,r.jsx)(s.h2,{id:"metrics-reference-table",children:"Metrics Reference Table"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Metric"}),(0,r.jsx)(s.th,{children:"Method"}),(0,r.jsx)(s.th,{children:"Return Type"}),(0,r.jsx)(s.th,{children:"Description"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Duration"}),(0,r.jsx)(s.td,{children:"getDuration()"}),(0,r.jsx)(s.td,{children:"string"}),(0,r.jsx)(s.td,{children:"Total test duration"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Total Requests"}),(0,r.jsx)(s.td,{children:"getTotalRequests()"}),(0,r.jsx)(s.td,{children:"int"}),(0,r.jsx)(s.td,{children:"Total number of requests"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Success Rate"}),(0,r.jsx)(s.td,{children:"getSuccessRate()"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"Percentage of successful requests"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Requests/sec"}),(0,r.jsx)(s.td,{children:"getRequestsPerSecond()"}),(0,r.jsx)(s.td,{children:"float"}),(0,r.jsx)(s.td,{children:"Average throughput"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Success Requests"}),(0,r.jsx)(s.td,{children:"getSuccessRequests()"}),(0,r.jsx)(s.td,{children:"int"}),(0,r.jsx)(s.td,{children:"Number of successful requests"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Failed Requests"}),(0,r.jsx)(s.td,{children:"getFailedRequests()"}),(0,r.jsx)(s.td,{children:"int"}),(0,r.jsx)(s.td,{children:"Number of failed requests"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Min Response Time"}),(0,r.jsx)(s.td,{children:"getMinResponseTime()"}),(0,r.jsx)(s.td,{children:"string"}),(0,r.jsx)(s.td,{children:"Fastest response time"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Max Response Time"}),(0,r.jsx)(s.td,{children:"getMaxResponseTime()"}),(0,r.jsx)(s.td,{children:"string"}),(0,r.jsx)(s.td,{children:"Slowest response time"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Avg Response Time"}),(0,r.jsx)(s.td,{children:"getAvgResponseTime()"}),(0,r.jsx)(s.td,{children:"string"}),(0,r.jsx)(s.td,{children:"Average response time"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"Median Response Time"}),(0,r.jsx)(s.td,{children:"getMedianResponseTime()"}),(0,r.jsx)(s.td,{children:"string"}),(0,r.jsx)(s.td,{children:"Median response time"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"P95 Response Time"}),(0,r.jsx)(s.td,{children:"getP95ResponseTime()"}),(0,r.jsx)(s.td,{children:"string"}),(0,r.jsx)(s.td,{children:"95th percentile response time"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"P99 Response Time"}),(0,r.jsx)(s.td,{children:"getP99ResponseTime()"}),(0,r.jsx)(s.td,{children:"string"}),(0,r.jsx)(s.td,{children:"99th percentile response time"})]})]})]})]})}function o(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},8453:(e,s,t)=>{t.d(s,{R:()=>l,x:()=>c});var n=t(6540);const r={},i=n.createContext(r);function l(e){const s=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),n.createElement(i.Provider,{value:s},e.children)}}}]);