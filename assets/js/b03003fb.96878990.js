"use strict";(self.webpackChunkphp_sdk_docs=self.webpackChunkphp_sdk_docs||[]).push([[147],{5613:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"Scenarios","title":"Scenarios","description":"Scenarios in VoltTest represent user flows that will be executed during the performance test.","source":"@site/docs/Scenarios.md","sourceDirName":".","slug":"/Scenarios","permalink":"/docs/Scenarios","draft":false,"unlisted":false,"editUrl":"https://github.com/volt-test/php-sdk-docs/tree/main/docs/Scenarios.md","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"id":"Scenarios","title":"Scenarios","sidebar_label":"Scenarios","sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"Volt Test Configuration","permalink":"/docs/VoltTest Configuration"},"next":{"title":"Steps (HTTP Requests)","permalink":"/docs/Steps"}}');var s=i(4848),a=i(8453);const r={id:"Scenarios",title:"Scenarios",sidebar_label:"Scenarios",sidebar_position:6},o="Scenarios",c={},d=[{value:"Creating a Scenario",id:"creating-a-scenario",level:2},{value:"Scenario Configuration",id:"scenario-configuration",level:2},{value:"Weight",id:"weight",level:3},{value:"Weight Validation",id:"weight-validation",level:4},{value:"Think Time",id:"think-time",level:3},{value:"Cookie Management",id:"cookie-management",level:3},{value:"Data Source Configuration",id:"data-source-configuration",level:3},{value:"Data Iteration Modes",id:"data-iteration-modes",level:3},{value:"Properties Reference",id:"properties-reference",level:2}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"scenarios",children:"Scenarios"})}),"\n",(0,s.jsx)(n.p,{children:"Scenarios in VoltTest represent user flows that will be executed during the performance test."}),"\n",(0,s.jsx)(n.p,{children:"Each scenario contains a sequence of steps and can be configured with specific behaviors."}),"\n",(0,s.jsx)(n.h2,{id:"creating-a-scenario",children:"Creating a Scenario"}),"\n",(0,s.jsx)(n.p,{children:"Create scenarios through the VoltTest instance:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:"use VoltTest\\VoltTest;\n\n$test = new VoltTest('API Test');\n$scenario = $test->scenario(\n    'Login Flow',           // Scenario name\n    'User authentication'   // Optional description\n);\n"})}),"\n",(0,s.jsx)(n.h2,{id:"scenario-configuration",children:"Scenario Configuration"}),"\n",(0,s.jsx)(n.h3,{id:"weight",children:"Weight"}),"\n",(0,s.jsx)(n.p,{children:"The weight of a scenario determines the execution probability relative to other scenarios"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:"$scenario->setWeight(75); // 75% weight\n"})}),"\n",(0,s.jsx)(n.p,{children:"Let's say you have two scenarios, A and B, with weights 30 and 70, respectively. and you have 100 virtual users.\nScenario A will be executed by approximately 30 virtual users, and scenario B will be executed by 70 virtual users."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:"$regitrationScenario = $test->scenario(\n'Registration Flow'\n);\n$browseCategoryScenario = $test->scenario(\n'Browse Category Flow'\n);\n$browseCategoryScenario->setWeight(70); // 70% weight\n$regitrationScenario->setWeight(30); // 30% weight\n"})}),"\n",(0,s.jsx)(n.admonition,{type:"warning",children:(0,s.jsx)(n.p,{children:"If you have only one scenario, ignore the weight configuration."})}),"\n",(0,s.jsx)(n.h4,{id:"weight-validation",children:"Weight Validation"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Weights must be integers between 1 and 100"}),"\n",(0,s.jsx)(n.li,{children:"The sum of all scenario weights must be 100"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"think-time",children:"Think Time"}),"\n",(0,s.jsx)(n.p,{children:"Let's say you have a scenario with multiple steps. and you want to add a delay between each step.\nThink time is the delay between steps in a scenario.\nThe Default think time is 0 seconds."}),"\n",(0,s.jsx)(n.p,{children:"Adding a delay between steps:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:"$scenario->setThinkTime('2s');  // 2-second delay\n$scenario->setThinkTime('1m');  // 1-minute delay\n"})}),"\n",(0,s.jsx)(n.p,{children:"This configuration adds a delay of (2 seconds or 1 minute) between each step in the scenario."}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsx)(n.p,{children:"You can configure think time at the step level as well, and it will override the scenario-level think time."})}),"\n",(0,s.jsx)(n.h3,{id:"cookie-management",children:"Cookie Management"}),"\n",(0,s.jsx)(n.p,{children:"Cookie management is disabled by default in VoltTest. You can enable it if needed."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:"$scenario->autoHandleCookies();\n"})}),"\n",(0,s.jsx)(n.h3,{id:"data-source-configuration",children:"Data Source Configuration"}),"\n",(0,s.jsx)(n.p,{children:"Assuming you have a CSV file with test data, you can configure data-driven testing in VoltTest."}),"\n",(0,s.jsx)(n.p,{children:"The data source configuration allows you to specify the data file path, mode, and whether the file has a header row."}),"\n",(0,s.jsx)(n.p,{children:"Then you can use the data in your scenario steps."}),"\n",(0,s.jsx)(n.p,{children:"Configure data-driven testing:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:"use VoltTest\\DataSourceConfiguration;\n\n$dataConfig = new DataSourceConfiguration(\n    __DIR__ . '/test-data.csv',    // Full file path\n    'random',           // Mode: sequential/random/unique\n    true                // Has header row\n);\n\n$scenario->setDataSourceConfiguration($dataConfig);\n"})}),"\n",(0,s.jsx)(n.p,{children:"So Each virtual user will get a row from the data file and use it in the scenario steps.\nEach Scenario will have its own data source configuration."}),"\n",(0,s.jsxs)(n.p,{children:["For more information on data-driven testing, see the ",(0,s.jsx)(n.a,{href:"/docs/category/examples",children:"Examples of Data-Driven Testing"})," section."]}),"\n",(0,s.jsx)(n.h3,{id:"data-iteration-modes",children:"Data Iteration Modes"}),"\n",(0,s.jsx)(n.p,{children:"When using data sources, you can choose from three iteration modes:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"sequential"}),": Iterate through records in order"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"random"}),": Select records randomly"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"unique"}),": Use each record only once"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"properties-reference",children:"Properties Reference"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Property"}),(0,s.jsx)(n.th,{children:"Description"}),(0,s.jsx)(n.th,{children:"Default"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"name"}),(0,s.jsx)(n.td,{children:"Scenario name"}),(0,s.jsx)(n.td,{children:"Required"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"description"}),(0,s.jsx)(n.td,{children:"Scenario description"}),(0,s.jsx)(n.td,{children:"Empty string"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"weight"}),(0,s.jsx)(n.td,{children:"Execution probability"}),(0,s.jsx)(n.td,{children:"100"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"thinkTime"}),(0,s.jsx)(n.td,{children:"Delay between steps"}),(0,s.jsx)(n.td,{children:"None"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"autoHandleCookies"}),(0,s.jsx)(n.td,{children:"Cookie management"}),(0,s.jsx)(n.td,{children:"false"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"DataSourceConfiguration"}),(0,s.jsx)(n.td,{children:"Data source configuration"}),(0,s.jsx)(n.td,{children:"None"})]})]})]}),"\n",(0,s.jsx)(n.p,{children:"Next We will see how to add steps to a scenario."})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>o});var t=i(6540);const s={},a=t.createContext(s);function r(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);